# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

# Rockcraft definition for Harbor registryctl image:
# docker.io/goharbor/harbor-registryctl:v2.10.2

name: harbor-registryctl
summary: Rock containing Harbor Registryctl component.
description: |
  Packages the Registryctl service of Harbor.
license: Apache-2.0

version: "v2.10.2"

# NOTE(aznashwan): the base for the registryctl image is VMware's Photon,
# but rockcraft only currently supports bare/ubuntu-based bases.
base: ubuntu@22.04
build-base: ubuntu@22.04
platforms:
  amd64:
  # arm64:


services:
  harbor_registryctl:
    startup: enabled
    override: replace

    # NOTE(aznashwan) set start.sh for compatibility with upstream image.
    # All it does is run `./make/photon/common/install_cert.sh` and exec `harbor_registryctl`.
    # https://github.com/goharbor/harbor/blob/v2.10.2/make/photon/registryctl/Dockerfile#L21
    command: /home/harbor/start.sh

    user: harbor
    group: harbor
    working-dir: /home/harbor

    # TODO(aznashwan): original Docker image includes Healthcheck should/can we also?
    # https://github.com/goharbor/harbor/blob/v2.10.2/make/photon/registryctl/Dockerfile#L17


parts:
  create-harbor-user:
    plugin: nil
    overlay-script: |
      groupadd -R $CRAFT_OVERLAY -r -g 10000 harbor
      useradd -R $CRAFT_OVERLAY \
        --no-log-init -r -m -g 10000 -u 10000 harbor

  build-deps:
    plugin: nil
    build-snaps:
      # https://github.com/goharbor/harbor/blob/v2.10.2/Makefile#L143
      - go/1.21/stable
    build-packages:
      - make

  # Sourced from:
  # https://github.com/goharbor/harbor/blob/v2.10.2/make/photon/registryctl/Dockerfile.base
  # https://github.com/goharbor/harbor/blob/v2.10.2/make/photon/registryctl/Dockerfile
  image-prep:
    after: [create-harbor-user]
    plugin: nil

    source-type: git
    source: https://github.com/goharbor/harbor
    source-tag: v2.10.2
    source-depth: 1

    override-build: |
      set -eux
      cd $CRAFT_PART_SRC

      # Copy over auxiliary files:
      OUTDIR="$CRAFT_PART_INSTALL/home/harbor"
      mkdir -p "$OUTDIR"

      cp ./make/photon/common/install_cert.sh "$OUTDIR/"
      cp ./make/photon/registryctl/start.sh "$OUTDIR/"

      mkdir -p "$CRAFT_PART_INSTALL/etc/pki/tls/certs"
      chown -R 10000:10000 "$CRAFT_PART_INSTALL/etc/pki/tls/certs"
      chown -R 10000:10000 "$OUTDIR/"
      chmod u+x "$OUTDIR/start.sh"
      chmod u+x "$OUTDIR/install_cert.sh"

      mkdir -p /etc/registry

  # The registryctl image embeds the `registry` binary as well so its
  # build steps have been lifted 1:1 from the `photon-registry` ROCK:
  # https://github.com/goharbor/harbor/blob/v2.10.2/make/photon/registryctl/Dockerfile#L12
  # https://github.com/canonical/harbor-rocks/pull/4
  build-registry-binary:
    after: [create-harbor-user]
    build-snaps:
      - go/1.21/stable
    plugin: go
    source-type: git
    source: https://github.com/distribution/distribution.git
    source-tag: v2.8.3
    override-build: |
      git apply --ignore-whitespace $CRAFT_PROJECT_DIR/redis.patch

      # 2.8.3 doesn't have a go.mod definition.
      mkdir -p /go/src/github.com/docker

      if [ ! -L /go/src/github.com/docker/distribution ]; then
        ln -s $(pwd) /go/src/github.com/docker/distribution
      fi

      pushd /go/src/github.com/docker/distribution

      export GOPATH=/go
      export BUILDTAGS=include_oss include_gcs
      export GO111MODULE=auto
      export CGO_ENABLED=0
      make clean binaries

      mkdir -p $CRAFT_PART_INSTALL/home/harbor
      mkdir -p $CRAFT_PART_INSTALL/usr/bin

      cp bin/registry $CRAFT_PART_INSTALL/usr/bin/registry_DO_NOT_USE_GC
      chown 10000:10000 $CRAFT_PART_INSTALL/usr/bin/registry_DO_NOT_USE_GC

  # Sourced from: https://github.com/goharbor/harbor/blob/v2.10.2/Makefile#L352
  build-harbor-registryctl:
    after: [create-harbor-user, build-deps, image-prep, build-registry-binary]
    # NOTE(aznashwan): Harbor's Makefile relies on building through Docker,
    # so we have to run the build commands manually:
    plugin: go

    source-type: git
    source: https://github.com/goharbor/harbor
    source-tag: v2.10.2
    source-depth: 1
    source-subdir: src

    build-environment:
      - CGO_ENABLED: 0
      - GOARCH: $CRAFT_ARCH_BUILD_FOR

    override-build: |
      set -eux

      # Deduce ldflags:
      GIT_TAG="v2.10.2"
      GIT_COMMIT_ID=`git -C "$CRAFT_PART_SRC" log --pretty=tformat:"%h" -n1`

      # Build binary:
      cd "$CRAFT_PART_SRC/src/registryctl"
      go build \
        -ldflags="-w -s -X github.com/goharbor/harbor/src/pkg/version.GitCommit=$GIT_COMMIT_ID -X github.com/goharbor/harbor/src/pkg/version.ReleaseVersion=$GIT_TAG" \
        -o "$CRAFT_PART_BUILD/harbor_registryctl"

      # Copy over binary and set appropriate permissions:
      OUTDIR="$CRAFT_PART_INSTALL/home/harbor"
      mkdir -p "$OUTDIR"

      cp $CRAFT_PART_BUILD/harbor_registryctl "$OUTDIR/"

      chown 10000:10000 "$OUTDIR/harbor_registryctl"
      chmod u+x "$OUTDIR/harbor_registryctl"

